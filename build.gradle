buildscript 
{
    repositories 
	{
        mavenCentral()
        maven 
		{
            name = "Minecraft Forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven 
		{
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies 
	{
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

ext.configFile = file "build.prop"

configFile.withReader 
{
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

allprojects 
{
	apply plugin: 'java'
	apply plugin: 'forge'
	apply plugin: 'maven'
	
	group = config.group_name
	version = config.mod_version
	archivesBaseName = config.mod_id

	minecraft 
	{
		version = config.minecraft_version + "-" + config.forge_version
		
		replaceIn "References.java"
		replace "@MOD_VERSION@", "${config.mod_version}"
	
		if(file('../run').exists()) 
		{
			runDir = "../run"
		} 
		else 
		{
			runDir = ""
		}
	}
}

dependencies {}

task deobfJar(type: Jar){
    from sourceSets.main.output
    appendix = 'deobf'
}

task sourceJar(type: Jar){
    from sourceSets.main.allSource
    appendix = 'src'
}

project.version = "${config.minecraft_version}-${config.mod_version}"

tasks.build.dependsOn('sourceJar', 'deobfJar')

processResources 
{
	inputs.property "mod_version", project.version
	inputs.property "tfc_version", project.config.tfc_version
	inputs.property "mt_version", project.config.mt_version
    inputs.property "minecraft_version", project.config.minecraft_version
	
	from(sourceSets.main.resources.srcDirs) 
	{
        include '**/*.info'
        include '**/*.prop'

        expand ([
            'mod_version': project.version,
            'tfc_version': project.config.tfc_version,
			'mt_version': project.config.mt_version,
            'minecraft_version': project.config.minecraft_version,
        ])
    }
    from(sourceSets.main.resources.srcDirs) 
	{
        exclude '**/*.info'
        exclude '**/*.prop'
    }
}